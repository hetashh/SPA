@model IEnumerable<SPA.Models.Procedure>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Процедуры";
}

<div class="container mt-4">
    <h2>Процедуры</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="row">
        @foreach (var procedure in Model)
        {
            <div class="procedure-card">
                <div class="procedure-info" onclick="toggleBookingForm(@procedure.Id)">
                    <h5 class="procedure-title">@procedure.Name</h5>
                    <h6 class="procedure-price">@procedure.Price ₽</h6>
                    <p class="procedure-description">@procedure.Description</p>
                </div>
                <div id="booking-form-@procedure.Id" class="booking-form">
                    <form asp-action="Book" method="post">
                        <input type="hidden" name="id" value="@procedure.Id" />
                        <div class="form-group">
                            <label>Дата:</label>
                            <input type="date" name="bookingDate" class="form-control booking-date" data-procedure-id="@procedure.Id" />
                        </div>
                        <div class="form-group">
                            <label>Время:</label>
                            <select name="bookingTime" class="form-control booking-time" data-procedure-id="@procedure.Id" disabled>
                                <option value="">Выберите время</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Забронировать</button>
                    </form>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts { @*ПОЧИНИТЬ*@
    <script>
        // Функция для переключения видимости формы бронирования
        function toggleBookingForm(procedureId) {
            // Получаем форму бронирования по ID процедуры
            var bookingForm = document.getElementById(`booking-form-${procedureId}`);
            // Переключаем класс 'expanded' у формы для показа/скрытия
            bookingForm.classList.toggle('expanded');
        }

        // Добавляем обработчик событий при загрузке документа
        document.addEventListener("DOMContentLoaded", function () {
            // Проходимся по всем элементам с классом 'booking-date'
            document.querySelectorAll(".booking-date").forEach(function (dateInput) {
                // Добавляем обработчик события 'change' для каждого элемента
                dateInput.addEventListener("change", function () {
                    // Получаем ID процедуры и выбранную дату бронирования
                    var procedureId = this.getAttribute("data-procedure-id");
                    var bookingDate = this.value;
                    // Получаем соответствующий элемент 'select' для выбора времени
                    var timeSelect = document.querySelector(`.booking-time[data-procedure-id='${procedureId}']`);

                    // Если дата выбрана, то активируем 'select' для выбора времени и загружаем доступное время
                    if (bookingDate) {
                        timeSelect.disabled = false;
                        // Запрашиваем доступное время для выбранной даты и процедуры
                        fetch(`/Procedure/GetAvailableTimes?date=${bookingDate}&procedureId=${procedureId}`)
                            .then(response => response.json())
                            .then(data => {
                                // Очищаем 'select' и добавляем опции с доступным временем
                                timeSelect.innerHTML = "<option value=''>Выберите время</option>";
                                data.forEach(time => {
                                    var option = document.createElement("option");
                                    option.value = time;
                                    option.text = time;
                                    timeSelect.appendChild(option);
                                });
                            });
                    } else {
                        // Если дата не выбрана, деактивируем 'select' и очищаем его
                        timeSelect.disabled = true;
                        timeSelect.innerHTML = "<option value=''>Выберите время</option>";
                    }
                });
            });
        });
    </script>
}
}
